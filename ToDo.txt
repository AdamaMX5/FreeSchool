Server integration
1. [ ] Nginx SSL mit Let's Encrypt einrichten
2. [ ] Systemd-Service für Gunicorn erstellen
3. [ ] CI/CD Pipeline (GitHub Actions)
4. [ ] Datenbank-Backups automatisieren

.env
	allow_origins = "http://v3264.1blu.de" # für das Backend zum einstellen

Frontend:
     Beim Login werden die Rollen mitgegeben und gespeichert

Backend:
    Progress Speichern
    JWT-Blacklist (durch Logout)
    Letzten Path speichern
    Rollen anlegen
    beim LoginResponse die Rolle mitgeben


Ideen:
    Lehrer bekommen eine Connection zu einer Kategory, wenn sie dort eine Lesson erstellt haben.
    In der Lehrerauswahl beim Erstellen eines neuen Contents sind oben die Lehrer mit einer Kategory Connection. Daruter sind alle Lehrer.
    beim Erstellen eines neuen Kontents:
      - Das LehrerFeld kann mit Text gefüllt werden, damit die Lange Liste gefiltert wird.
    Die Navigationsleiste bekommt einen Button für eine LehrerView.
      - Dort werden die Lehrer mit der Kategory Connection angezeigt und die Anzahl ihrer Inhalte hier.
      - Ein Lehrer kann vom Schüler geliked oder disliked werden. (eine Reihenfolge wird vergeben)
      - Die Inhalte der gelikten Lehrer werden als erstes angezeigt. und disliked Lehrer werden ausgeblendet
      - anhand der Anzahl der Likes, wird dieser Lehrer neuen Schülern angezeigt
      - Lehrer können Zusatzinhalte in eine Kategory einfügen.

Langfrist Ideen:
    - Zentrale mit qualitätsgesicherten Inhalten (Kategorien, Lektionen, Lehrern).
	- versioniert zum Updaten der Schulbackends.
    - peer to peer Netzwerk der Schulcomuter, die die Videos lokal speichern und sich gegenseitig schicken. 
        - Je mehr Schulcomputer, desto mehr Videos können vorgehalten werden und die Lastverteilung ist auch kein Problem. 
        - Sollte auch von den Schülern von außen (gleiche Ortschaft) zugänglich sein? 
        - Lastverteilung peer Schulserver, der weiß wo welches Video liegt und vielleicht haben mehrere Schulcomputer ein beliebtes Video (balancing wird möglich)