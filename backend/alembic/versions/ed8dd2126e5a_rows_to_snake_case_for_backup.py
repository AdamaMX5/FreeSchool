"""rows to snake case for backup

Revision ID: ed8dd2126e5a
Revises: 99e2d930d3cb
Create Date: 2025-09-04 11:24:28.395196

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = 'ed8dd2126e5a'
down_revision: Union[str, None] = '99e2d930d3cb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Zuerst neue Spalten als nullable hinzufügen
    op.add_column('category', sa.Column('background_link', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('password_verify', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('password_reset_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('email_verify_token', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('email_verify', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('last_login', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('last_editor', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('profile', sa.Column('last_editor', sqlmodel.sql.sqltypes.AutoString(), nullable=True))

    # 2. Daten von alten zu neuen Spalten kopieren
    op.execute('UPDATE category SET background_link = "backgroundLink"')
    op.execute('UPDATE users SET password_verify = "passwordVerify"')
    op.execute('UPDATE users SET password_reset_token = "passwortResetToken"')
    op.execute('UPDATE users SET email_verify_token = "emailVerifyToken"')
    op.execute('UPDATE users SET email_verify = "emailVerify"')
    op.execute('UPDATE users SET last_login = "lastLogin"')
    op.execute('UPDATE users SET last_editor = "lastEditor"')
    op.execute('UPDATE profile SET last_editor = "lasteditor"')

    # 3. Alte Spalten entfernen
    op.drop_column('category', 'backgroundLink')
    op.drop_column('users', 'passwordVerify')
    op.drop_column('users', 'passwortResetToken')
    op.drop_column('users', 'emailVerifyToken')
    op.drop_column('users', 'emailVerify')
    op.drop_column('users', 'lastLogin')
    op.drop_column('users', 'lastEditor')
    op.drop_column('profile', 'lasteditor')

    # 4. Neue Spalten auf NOT NULL setzen (falls erforderlich)
    op.alter_column('category', 'background_link', nullable=False)
    op.alter_column('users', 'password_verify', nullable=False, server_default='false')
    op.alter_column('users', 'email_verify', nullable=False, server_default='false')
    op.alter_column('users', 'last_editor', nullable=False, server_default='automatic')
    op.alter_column('profile', 'last_editor', nullable=False, server_default='automatic')

    # 5. Indizes aktualisieren
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    op.drop_index('idx_categorycategory_child_id', table_name='categorycategory')
    op.drop_index('idx_content_lesson_id', table_name='content')
    op.drop_index('idx_content_teacher_id', table_name='content')
    op.create_index(op.f('ix_content_id'), 'content', ['id'], unique=False)
    op.drop_index('idx_lesson_category_id', table_name='lesson')
    op.create_index(op.f('ix_lesson_id'), 'lesson', ['id'], unique=False)
    op.drop_index('idx_profile_user_id', table_name='profile')
    op.drop_index('idx_teacher_id', table_name='teacher')
    op.create_index(op.f('ix_teacher_id'), 'teacher', ['id'], unique=False)
    op.drop_index('idx_userlessonlink_lesson_id', table_name='userlessonlink')
    op.drop_index('idx_userrolelink_role_id', table_name='userrolelink')
    op.drop_constraint('user_email_unique', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. Alte Spalten wieder hinzufügen
    op.add_column('users', sa.Column('passwortResetToken', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('emailVerify', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('lastEditor', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('emailVerifyToken', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('users', sa.Column('lastLogin', sa.Integer(), nullable=True))
    op.add_column('users', sa.Column('passwordVerify', sa.Boolean(), nullable=True))
    op.add_column('profile', sa.Column('lasteditor', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('category', sa.Column('backgroundLink', sqlmodel.sql.sqltypes.AutoString(), nullable=True))

    # 2. Daten zurückkopieren
    op.execute('UPDATE category SET "backgroundLink" = background_link')
    op.execute('UPDATE users SET "passwordVerify" = password_verify')
    op.execute('UPDATE users SET "passwortResetToken" = password_reset_token')
    op.execute('UPDATE users SET "emailVerifyToken" = email_verify_token')
    op.execute('UPDATE users SET "emailVerify" = email_verify')
    op.execute('UPDATE users SET "lastLogin" = last_login')
    op.execute('UPDATE users SET "lastEditor" = last_editor')
    op.execute('UPDATE profile SET "lasteditor" = last_editor')

    # 3. Neue Spalten entfernen
    op.drop_column('category', 'background_link')
    op.drop_column('users', 'password_verify')
    op.drop_column('users', 'password_reset_token')
    op.drop_column('users', 'email_verify_token')
    op.drop_column('users', 'email_verify')
    op.drop_column('users', 'last_login')
    op.drop_column('users', 'last_editor')
    op.drop_column('profile', 'last_editor')

    # 4. Alte Indizes wiederherstellen
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.create_index('idx_categorycategory_child_id', 'categorycategory', ['child_id'], unique=False)
    op.drop_index(op.f('ix_content_id'), table_name='content')
    op.create_index('idx_content_teacher_id', 'content', ['teacher_id'], unique=False)
    op.create_index('idx_content_lesson_id', 'content', ['lesson_id'], unique=False)
    op.drop_index(op.f('ix_lesson_id'), table_name='lesson')
    op.create_index('idx_lesson_category_id', 'lesson', ['category_id'], unique=False)
    op.create_index('idx_profile_user_id', 'profile', ['user_id'], unique=False)
    op.drop_index(op.f('ix_teacher_id'), table_name='teacher')
    op.create_index('idx_teacher_id', 'teacher', ['id'], unique=False)
    op.create_index('idx_userlessonlink_lesson_id', 'userlessonlink', ['lesson_id'], unique=False)
    op.create_index('idx_userrolelink_role_id', 'userrolelink', ['role_id'], unique=False)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('user_email_unique', 'users', ['email'])
    # ### end Alembic commands ###
